apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def resourceEntry = 'src/main/res/'

def scanAllResourcesFolder(String absolutePath) {
    def output = [file(absolutePath)]
    def files = file(absolutePath).listFiles()
    files.findAll { it -> it.isDirectory() }.each {
        directory ->
            println("Entering directory > " + directory.absolutePath)
            output += scanAllResourcesFolder(directory.absolutePath)
    }
    return output
}


android.applicationVariants.all { variant ->
    tasks.named("generate${variant.name.capitalize()}Resources").configure { mergeResourceTask ->
        mergeResourceTask.outputs.upToDateWhen { false }
    }
    tasks.named("merge${variant.name.capitalize()}Resources").configure { mergeResourceTask ->
        mergeResourceTask.outputs.upToDateWhen { false }
    }
}


android {

    dataBinding {
        enabled = true
    }

    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.nemesiss.dev.piaprobox"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res {
                println("Trying to resolve resources layers...")
                srcDirs = scanAllResourcesFolder(resourceEntry)
            }
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/README.md'
        exclude 'META-INF/CHANGES'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude("META-INF/*.kotlin_module")
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:percent:28.0.0'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'com.alibaba:fastjson:1.1.71.android'
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.karumi:dexter:5.0.0'
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    implementation 'com.jaredrummler:material-spinner:1.3.1'

    implementation 'com.liulishuo.okdownload:okdownload:1.0.7'
    implementation 'com.liulishuo.okdownload:ktx:1.0.7'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.11'

    api 'com.google.dagger:dagger:2.28'
    kapt 'com.google.dagger:dagger-compiler:2.28'

    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'me.weishu:free_reflection:3.0.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
